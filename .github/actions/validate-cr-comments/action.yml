name: 'Check Deployment Comment for Change Request Number'
description: 'Ensures deployment comments include a change request number.'

outputs:
  valid:
    description: 'Boolean indicating if the comment is valid'
    value: ${{ steps.check_cr.outputs.valid }}
runs:
  using: 'composite'
  steps:
  # - name: Get deployment comment
  #   id: cr_comment
  #   shell: bash
  #   run: |
  #     echo "deployment comment=${{ github.event.head_commit.message }}"
  #     echo "DEPLOY_COMMENT=${{ github.event.head_commit.message }}" >> "$GITHUB_ENV"

  - name: Capture deployment approval comments
    id: capture_comments
    uses: actions/github-script@v6
    with:
      # github-token: ${{ secrets.PAT }}
      script: "const { owner, repo } = context.repo;       \nconst response = await github.request('GET /repos/{owner}/{repo}/actions/runs/{runId}/approvals', {\n      owner: owner,\n      repo: repo,\n      runId: context.runId\n   });\n      #magic___^_^___line\nif (response.status === 200) {\n    const comments = response.data.approvals.map(approval => approval.comment);\n    console.log(JSON.stringify(comments, null, 2));\n    core.setOutput('comments',comments[0]);\n} else {\n    console.error(`Failed to fetch approval comments: ${response.status}`);\n}\n      #magic___^_^___line\n      #magic___^_^___line\n"
  - name: Check for Change Request Number
    id: check_cr
    shell: bash
    run: |
      if echo "${{ steps.capture_comments.outputs.comments }}" | grep -qE "CR-[0-9]+"; then
        echo "valid=true" >> "$GITHUB_OUTPUT"
      else
        echo "valid=false" >> "$GITHUB_OUTPUT"
      fi

  - name: Print the valid comment status
    id: Print
    run: echo "valid='${{ steps.check_cr.outputs.valid}}'"
    shell: bash
